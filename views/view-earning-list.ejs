<!DOCTYPE html>
<html>
 <head>
  <title>TradingView - Fetch Earning List</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <!-- jQuery 3.7.0 -->
  <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
  <!-- Fontawesome 6.4.2 -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <!-- Bootstrap 5.3.0 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
  <!-- Bootstrap-Table 1.22.1 -->
  <link href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css" rel="stylesheet">
  <script src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script>
  <script>
    
    /*
        [Back-End API] 
    */
    const getEarning = async({ symbol, url }) => {
        const api_url = `/earning?symbol=${symbol}&url=${url}`;
        
        return new Promise((resolve, reject) => {
            fetch(api_url)
                .then(res => res.json())
                .then(json => resolve(json))
                .catch(err => reject(err));
        });
    }

    const getEarningList = async({ watchlist_url }) => {
        const api_url = `/earning-list?watchlist_url=${watchlist_url}`;
        
        return new Promise((resolve, reject) => {
            fetch(api_url)
                .then(res => res.json())
                .then(json => resolve(json))
                .catch(err => reject(err));
        });
    }

    const getDataIndex = (list = [], target) => {
        let idx = -1;

        for(let i=0; i<list.length; i++)
            if(list[i].symbol === target)
                return i;
        return idx;
    }

    /*
    {
        "symbol":"TSLA",
        "url":"https://www.tradingview.com/symbols/NASDAQ-TSLA/",
        "is_stock":true,
        "next_date":"2023-10-18",
        "next_days":62
    },
    */

    //  base on "next_date" to re-calculate "next_days"
    const updateNextDays = (list = []) => {
        const new_list = list.map(obj => {
            //  next report date
            const d2 = new Date(obj.next_date);
            //  now the date (clear the time)
            const d1 = new Date(new Date().toISOString().substring(0, 10));
            const diff = d2.getTime() - d1.getTime();
            const next_days = diff / 24 / 60 / 60 / 1000;

            return {
                ...obj, 
                next_days
            }
        });
        
        return new_list;
    }

    //  convert the "list" for "bootstrapTable({ data })"
    const convertTableData = (list = []) => {
        //  highlight overdue "next_days" to red text color
        list = list.map(obj => {
            if(obj.next_days < 0)
                for(const prop in obj)
                    obj[prop] = `<span class="text-danger">${obj[prop]}</span>`;
            return obj;
        });

        return list;
    }
    
    $(() => {
        let earning_list = JSON.parse(localStorage.getItem("earning_list") || "[]");
        let is_initial = false;
        let fetch_mode = "watchlist";
        
        earning_list = updateNextDays(earning_list);
        earning_list.sort((a, b) => a.next_days - b.next_days);
        //  update to cache (localStorage)
        localStorage.setItem("earning_list", JSON.stringify(earning_list));
        earning_list = convertTableData(earning_list);
        
        if(earning_list.length)
            $(`#table-earning-list`).bootstrapTable({ data: earning_list });
        
        $("#btn-fetch").bind("click", () => {
            const watchlist_url = $("#watchlist-url").val();
            
            if(watchlist_url){
                earning_list = [];

                getEarningList({ watchlist_url }).then(async data_list => {
                    earning_list = [...data_list];
                    localStorage.setItem("earning_list", JSON.stringify(data_list));
                    
                    //  update the "data_list" to "#table-earning-list"
                    if(is_initial)
                        $("#table-earning-list").bootstrapTable("load", data_list);
                    else
                        $(`#table-earning-list`).bootstrapTable({ data: data_list });
                    
                    console.log(`[${new Date().toISOString()}] Start Fetch Individual Earning Date.`);
                    for(let i=0; i<earning_list.length; i++){
                        const { symbol, url } = earning_list[i];

                        try{
                            const json = await getEarning({ symbol, url });
                            const idx = getDataIndex(earning_list, json.symbol);
                            
                            if(idx !== -1){
                                if(json.is_stock)
                                    earning_list[idx] = json;
                                else{
                                    earning_list.splice(idx, 1);
                                    i--;
                                }

                                //  update the "earning_list" to local cache
                                localStorage.setItem("earning_list", JSON.stringify(earning_list));
                            }
                            
                            $("#table-earning-list").bootstrapTable("load", earning_list);
                        }catch(error){
                            const err_msg = `[getEarning] Fail to fetch "${symbol}"\n(${url})`;

                            console.error(error);
                            console.log(err_msg);

                            alert(err_msg);
                        }
                    }
                    console.log(`[${new Date().toISOString()}] End Fetch Individual Earning Date.`);
                })
                .catch(err => {
                    console.error(err);
                    
                    alert(`Fail to request API.`);
                });
            }
            else
                alert(`Please input a "TradingView - Watchlist Url".`);
        });
    
        $("#switch-mode").bind("change", () => {
            const is_watchlist = document.querySelector("#switch-mode").checked;
            const mode = (is_watchlist)? "Watchlist": "Symbol";
            
            if(mode === "Watchlist"){
                $("#symbol-url").parent().parent().addClass("d-none");
                $("#watchlist-url").parent().parent().removeClass("d-none");

                $("#switch-mode-label").html(`Watchlist Url`);
            }
            else if(mode === "Symbol"){
                $("#symbol-url").parent().parent().removeClass("d-none");
                $("#watchlist-url").parent().parent().addClass("d-none");
                
                $("#switch-mode-label").html(`Symbol Url`);
            }
        });
    });

  </script>
 </head>
 <body class="text-light bg-dark">
  
  <!-- Container: Main -->
  <div class="container-xxl">
   <div class="row mt-5">
    <div class="col d-flex align-items-center justify-content-center form-check form-switch">
     <input class="form-check-input" id="switch-mode" checked 
        type="checkbox" role="switch" />
     <label class="form-check-label ms-2" id="switch-mode-label" for="switch-mode">
      Watchlist Url
     </label>
    </div>
   </div>

   <div class="row">
    <!-- Input: Symbol Url -->
    <div class="col d-none">
     <div class="form-floating m-auto mt-2 w-50 text-dark">
      <input id="symbol-url" type="url" class="form-control" 
        placeholder="Symbol Url" />
      <label for="symbol-url" class="ms-2">
       <i class="fa-solid fa-link me-2"></i>Symbol Url
      </label>
     </div>
    </div>
    <!-- End of Input: Symbol Url -->

    <!-- Input: Watchlist Url -->
    <div class="col">
     <div class="form-floating m-auto mt-2 w-50 text-dark">
      <input id="watchlist-url" type="url" class="form-control" 
        value="https://www.tradingview.com/watchlists/85999770/" placeholder="Watchlist Url" />
      <label for="watchlist-url" class="ms-2">
       <i class="fa-solid fa-link me-2"></i>Watchlist Url
      </label>
     </div>
    </div>
    <!-- End of Input: Watchlist Url -->
   </div>

   <button id="btn-fetch" class="btn d-flex align-items-center m-auto my-5 px-5 btn-outline-success">
    <i class="fa-solid fa-cloud-arrow-down me-2"></i>Fetch
   </button>
   
   <!-- Table: Earning List -->
   <table id="table-earning-list" class="table table-primary table-striped" 
        data-search="true"
        data-search-align="left"
        data-search-highlight="true"

        data-show-columns="true"
        data-show-columns-toggle-all="true"

        data-page-list="[10, 25, 50, 100, all]"
        data-page-size="25">
    <thead>
     <tr>
      <th data-field="symbol" data-sortable="true">
        <i class="fa-solid fa-money-bill me-2"></i>Symbol
      </th>
      <th data-field="url" data-sortable="true" data-visible="false">
        <i class="fa-solid fa-link me-2"></i>Url
      </th>
      <th data-field="next_date" data-sortable="true">
        <i class="fa-solid fa-calendar-days me-2"></i>Next Date
      </th>
      <th data-field="next_days" data-sortable="true">
        <i class="fa-solid fa-calendar-check me-2"></i>Next Days
      </th>
     </tr>
    </thead>
   </table>
   <!-- End of Table: Earning List -->
  </div>
  <!-- End of Container: Main -->
  
 </body>
</html>